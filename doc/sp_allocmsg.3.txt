sp_allocmsg(3)
==============

NAME
----
sp_allocmsg - allocate a message


SYNOPSIS
--------
*#include <sp/sp.h>*

*void *sp_allocmsg (size_t 'size', int 'type');*


DESCRIPTION
-----------
Allocate a message of the specified 'size' to be sent via
linknanomsg:sp_sendmsg[3] function. The content of the message is undefined
after allocation and is supposed to be filled in by the user. While
linknanomsg:sp_send[3] allows to send arbitrary buffer, buffers allocated using
_sp_allocmsg()_ may be more efficient for large messages as they allow for
using zero-copy techniques.

'type' parameter specifies type of allocation mechanism to use. Zero is the
default one, however, individual transport mechanisms may define their
own allocation mechanisms, such as allocating in shared memory or allocating
a memory block pinned down to a physical memory address. Such allocation,
when used with the transport that defines them, should be more efficient
than the default allocation mechanism.


RETURN VALUE
------------
If the function succeeds pointer to newly allocated buffer is returned.
Otherwise, NULL is returned and 'errno' is set to to one of the values
defined below.


ERRORS
------
*EINVAL*::
Supplied allocation 'type' is invalid.
*ENOMEM*::
Not enough memory to allocate the message.


EXAMPLE
-------

----
void *msg = sp_allocmsg (12, 0);
memcpy (msg, "Hello world!", 12);
sp_sendmsg (s, msg, 0);
----


SEE ALSO
--------
linknanomsg:sp_freemsg[3]
linknanomsg:sp_sendmsg[3]
linknanomsg:sp_recvmsg[3]
linknanomsg:nanomsg[7]

AUTHORS
-------
Martin Sustrik <sustrik@250bpm.com>

